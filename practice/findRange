  public int[] searchRange(int[] A, int target) {
    int[] ret = {-1, -1};
    
    // the first binary search to find the left boundary
    int l = 0, r = A.length-1;
    while(l < r) {
        int mid = (l+r)/2;
        if (A[mid] < target)
            l = mid + 1;
        else
            r = mid;
    }
    
    // if target can not be found, return {-1, -1}
    if (A[l] != target)
        return ret;
    
    ret[0] = l;
    // second binary search to find the right boundary
    r = A.length-1;
    while(l < r) {
        // mid is calculated differently
        int mid = (l + r+1)/2;
        if (A[mid] > target)
            r = mid - 1;
        else
            l = mid;
    }
    ret[1] = l;
    return ret;
}
